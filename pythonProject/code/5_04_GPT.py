# 获取用户输入的列表，元素用空格分隔
input_str = input("请输入列表，用空格分隔每个元素：")
input_list = input_str.split()

# 初始化一个空集合，用于存放已遇到的唯一元素
seen = set()

# 初始化一个空列表，用于存放结果
output_list = []

# 遍历输入列表
for item in input_list:
    # 如果当前元素不在已遇到的集合中，添加到集合和输出列表中
    if item not in seen:
        seen.add(item)
        output_list.append(item)

print("去重后的列表：", output_list)

"""
集合在Python中是基于哈希表实现的，这意味着它们可以非常快速地（平均情况下为O(1)时间复杂度）进行查找、添加和删除元素等操作。这是因为集合是通过元素的哈希值来存储的，所以可以直接跳到元素的存储位置，而不需要遍历整个结构。
另一方面，列表是一个数组，当你检查一个元素是否在列表中时，Python必须从头至尾遍历列表中的每个元素，直到找到匹配的元素或者到达列表的末尾。这样的操作时间复杂度是O(n)，其中n是列表的长度。因此，当列表较长时，这个操作可能会变得很慢。
因此，在去重或者需要频繁检查元素是否存在的场景下，使用集合会大大提高效率。
"""
